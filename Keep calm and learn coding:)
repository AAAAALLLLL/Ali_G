install.packages("caret")
library(caret)      
training<-read.csv("E:\\pml-training.csv")   loading training data set
testing<-read.csv("E:\\pml-testing.csv")     loading testing data set
View(training)      
set.seed(1846)
ncol(training)
nearzero <- nearZeroVar(training, saveMetrics = TRUE)        detecting N/A variables
training <- training[,!nearzero$nzv]                         remove N/A variables from training
ncol(training)
rvar<-sapply(colnames(training),function(x)if(sum(is.na(training[,x]))>0.5*nrow(training)){return(TRUE)}else{return(FALSE)})   also the variables with ore than half of N/A detects
trtraining<-training[,!rvar]                the varaibles with more than 50% N/A values omits from training data set
ViView(training)                             
training<-training[,-c(1:6)]
ncol(training)
c<-findCorrelation(cor(training[,-53]),cutoff = 0.85)
names(training[c])
c<-findCorrelation(cor(training[,-53]),cutoff = 0.75)
names(training[c])
tc<-trainControl(method = "repeatedcv",number = 5,preProcOptions = "pca")
svmradial<-train(classe~.,data = training,method="svmRadia",trControl=tc)
confusionMatrix(svmradial)
svmlinear<-train(classe~.,data = training,method="svmLinear",trControl=tc)
confusionMatrix(svmlinear)
install.packages("nnet")
library(nnet)
nn<-train(classe~.,data = training,method="nnet",trControl=tc)
coconfustionMatrix(nn)
trtree<-train(classe~.,data = training,method="rpart",trControl=tc)
coconfusionMatrix(tree)

pspvml<-predict(svmlinear,testing)
pspvmr<-predict(svmradial,testing)
pnnn<-predict(nnet,testing)
pttree<-predict(tree,testing)

pspvmr




